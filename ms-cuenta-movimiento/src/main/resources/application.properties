# Environment Variables
spring.config.import=optional:file:.env[.properties]

# Application Name
spring.application.name=${SPRING_APPLICATION_NAME}

# Server Configuration
server.port=${SERVER_PORT}

# Database Configuration (R2DBC)
spring.r2dbc.url=r2dbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.r2dbc.username=${DB_USERNAME}
spring.r2dbc.password=${DB_PASSWORD}

# SQL Initialization (para crear tablas y ejecutar scripts SQL)
spring.sql.init.mode=always
spring.sql.init.platform=postgresql
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql
spring.sql.init.continue-on-error=true

# R2DBC Configuration
spring.r2dbc.pool.enabled=true
spring.r2dbc.pool.initial-size=10
spring.r2dbc.pool.max-size=20

# Development Tools
spring.devtools.restart.enabled=false
spring.web.resources.add-mappings=false

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.topic.movements=${KAFKA_TOPIC_MOVEMENTS}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.enable-idempotence=true

# Logging Configuration
logging.level.org.springframework.r2dbc=DEBUG
logging.level.io.r2dbc.postgresql.QUERY=DEBUG

# Eureka Client Configuration
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME:localhost}
eureka.instance.instance-id=${spring.application.name}:${server.port}

# Management endpoints (para health checks)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.enabled=true

# Custom microservice configuration
microservice.clients.url=${MICROSERVICE_CLIENTS_URL}