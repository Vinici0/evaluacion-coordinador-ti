# Environment Variables
spring.config.import=optional:file:.env[.properties]

# Application Name
spring.application.name=${SPRING_APPLICATION_NAME}

# Server Configuration
server.port=${SERVER_PORT}

# Eureka Client Configuration
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL}
eureka.client.register-with-eureka=${EUREKA_REGISTER_WITH_EUREKA}
eureka.client.fetch-registry=${EUREKA_FETCH_REGISTRY}
eureka.instance.prefer-ip-address=${EUREKA_PREFER_IP_ADDRESS}
eureka.instance.hostname=${EUREKA_INSTANCE_HOSTNAME}
eureka.instance.instance-id=${spring.application.name}:${server.port}

# Gateway Configuration - Discover services automatically
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# CORS Configuration
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allow-credentials=true

# Timeout configurations
spring.cloud.gateway.server.webflux.httpclient.connect-timeout=${GATEWAY_CONNECT_TIMEOUT}
spring.cloud.gateway.server.webflux.httpclient.response-timeout=${GATEWAY_RESPONSE_TIMEOUT}

# Logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.web.reactive=DEBUG

# Management endpoints
management.endpoints.web.exposure.include=health,info,routes,gateway
management.endpoint.health.access=unrestricted
management.endpoint.gateway.access=unrestricted
